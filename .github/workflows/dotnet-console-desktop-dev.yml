name: .NET Console Desktop Developing

on:
  push:
    branches-ignore:
      - master

env:
  Solution_Name: WSL2.programs/WSL2.programs.sln
  Firewall_Test_Project_Path: WSL2.programs/tests/FireWallTest/FirewallTest.csproj
  Strategies_Test_Project_Path: WSL2.programs/tests/StrategiesTest/StrategiesTest.csproj
  Wsl_Test_Project_Path: WSL2.programs/tests/WslTest/WslTest.csproj


jobs:
  checkout:
    strategy:
      matrix:
        configuration: [Debug, Release]
    runs-on: windows-2022
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: setups
        path: ${{ github.workspace }}
  
  build_dotnet: 
    name: Build Solution with dotnet
    runs-on: windows-2022
    needs: [ checkout ]
    strategy:
      matrix:
        configuration: [ Debug, Release ]
        platform: [ x64 ]
        dotnet_version: [ net6.0 ]
    steps:
      - name: Setup dotnet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Download a restores artifact
        uses: actions/download-artifact@v3
        with:
          name: setups

      - name: Restore Packages
        run: nuget restore ${{ env.Solution_Name }} 

      - name: dotnet build
        run: dotnet build ${{ github.workspace }}\WSL2.programs.sln -c ${{ matrix.configuration }} -f ${{ matrix.dotnet_version }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build_dotnet
          path: ${{ github.workspace }}

  build:
    name: Build Solution
    runs-on: windows-2022
    needs: [ checkout ]
    strategy:
      matrix:
        configuration: [ Debug, Release ]
        platform: [ x64 ]
    steps:
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.1.3

      - name: Download a restores artifact
        uses: actions/download-artifact@v3
        with:
          name: setups

      - name: Restore Packages
        run: nuget restore ${{ env.Solution_Name }} 

      - name: Build Solution
        run: msbuild $env:Solution_Name /p:configuration=${{ matrix.configuration }} /p:Platform=${{ matrix.platform }} -m

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: ${{ github.workspace }}

  test_firewall_dotnet:
    name: Run firewall test dotnet
    runs-on: windows-2022
    needs: [ build_dotnet ]
    strategy:
      matrix:
        configuration: [ Debug, Release ]
        platform: [ x64 ]
        dotnet_version: [ net6.0 ]
    steps:
      - name: Setup dotnet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Download a restores artifact
        uses: actions/download-artifact@v3
        with:
          name: build_dotnet
      - name: dotnet test
        run: dotnet test ${{ github.workspace }}/$env:Firewall_Test_Project_Path -c ${{ matrix.configuration }} -f ${{ matrix.dotnet_version }} --collect "XPlat Code Coverage"

  test_firewall:
    name: Run firewall test
    runs-on: windows-2022
    needs: [ build ]
    strategy:
      matrix:
        configuration: [ Debug, Release ]
        platform: [ x64 ]
        dotnet_version: [ net6.0 ]
    steps:
      - name: Setup VSTest
        uses: darenm/Setup-VSTest@v1.2

      - name: Download a build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: Run test
        uses: microsoft/vstest-action@v1.0.0
        with:
          testAssembly: FirewallTest.dll
          searchFolder: ${{ github.workspace }}/WSL2.programs/tests/FirewallTest/bin/${{ matrix.platform }}/${{ matrix.configuration }}/${{ matrix.dotnet_version }}/
          runInParallel: true
          otherConsoleOptions: '--collect:"Code Coverage;Format=Xml;CoverageFileName=coverage.xml" /ResultsDirectory:./coverage'

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: vstest-firewall
          path: ${{ github.workspace }}

  tests_strategies:
    name: Run Strategies test
    runs-on: windows-2022
    needs: [ build ]
    strategy:
      matrix:
        configuration: [ Debug, Release ]
        platform: [ x64 ]
        dotnet_version: [ net6.0 ]
    steps:
      - name: Setup VSTest
        uses: darenm/Setup-VSTest@v1.2

      - name: Download a build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: Run test
        uses: microsoft/vstest-action@v1.0.0
        with:
          testAssembly: StrategiesTest.dll
          searchFolder: ${{ github.workspace }}/WSL2.programs/tests/StrategiesTest/bin/${{ matrix.platform }}/${{ matrix.configuration }}/${{ matrix.dotnet_version }}/
          runInParallel: true
          codeCoverageEnabled: true

  tests_wsl:
    name: Run Wsl test
    runs-on: windows-2022
    needs: [ build ]
    strategy:
      matrix:
        configuration: [ Debug, Release ]
        platform: [ x64 ]
        dotnet_version: [ net6.0 ]
    steps:
      - name: Setup VSTest
        uses: darenm/Setup-VSTest@v1.2

      - name: Download a build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: Run test
        uses: microsoft/vstest-action@v1.0.0
        with:
          testAssembly: WslTest.dll
          searchFolder: ${{ github.workspace }}/WSL2.programs/tests/WslTest/bin/${{ matrix.platform }}/${{ matrix.configuration }}/${{ matrix.dotnet_version }}/
          runInParallel: true
          codeCoverageEnabled: true
      