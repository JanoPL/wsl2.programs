name: .NET Console Desktop 

on:
  push:
    branches: [ "github-action" ]
  pull_request:
    branches: [ "github-action" ]

env:
  Solution_Name: WSL2.programs/WSL2.programs.sln
  Firewall_Test_Project_Path: WSL2.programs/tests/FireWallTest/FirewallTest.csproj
  Strategies_Test_Project_Path: WSL2.programs/tests/StrategiesTest/StrategiesTest.csproj
  Wsl_Test_Project_Path: WSL2.programs/tests/WslTest/WslTest.csproj


jobs:
  setups:
    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-2022

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Install .NET Core
      uses: microsoft/setup-msbuild@v1.1

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1

    - name: Setup VSTest
      uses: darenm/Setup-VSTest@v1.2

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: setups
        path: ${{ github.workspace }}

  restores:
    name: Restore Nuget solution
    runs-on: windows-2022
    needs: [ setups ]
    steps:
    - name: Download a setups artifact
      uses: actions/download-artifact@v3
      with:
        name: setups

    - name: Restore Packages
      run: nuget restore ${{ env.Solution_Name }} 

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: restores
        path: ${{ github.workspace }}

  build:
    name: Build Solution
    runs-on: windows-2022
    needs: [ restores ]
    strategy:
      matrix:
        configuration: [ Debug, Release ]
        platform: [ x64 ]
    steps:
      - name: Download a restores artifact
        uses: actions/download-artifact@v3
        with:
          name: restores

      - name: Build Solution
        run: msbuild $env:Solution_Name /p:platform="Any CPU" /p:configuration=${{ matrix.configuration }} /p:Platform=${{ matrix.platform }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: ${{ github.workspace }}

  test_firewall: 
    name: Run firewall test
    runs-on: windows-2022
    needs: [ build ]
    strategy:
      matrix:
        configuration: [ Debug, Release ]
    steps:
      - name: Download a build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: Run test
        uses: microsoft/vstest-action@v1.0.0
        with:
          testAssembly: FirewallTest.dll
          searchFolder: ./WSL2.programs/tests/FirewallTest/bin/${{ matrix.configuration }}/
          runInParallel: true

  tests_strategies:
    name: Run Strategies test
    runs-on: windows-2022
    needs: [ build ]
    strategy:
      matrix:
        configuration: [ Debug, Release ]
    steps:
      - name: Download a build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: Run test
        uses: microsoft/vstest-action@v1.0.0
        with:
          testAssembly: StrategiesTest.dll
          searchFolder: ./WSL2.programs/tests/StrategiesTest/bin/${{ matrix.configuration }}/
          runInParallel: true

  tests_wsl:
    name: Run Wsl test
    runs-on: windows-2022
    needs: [ build ]
    strategy:
      matrix:
        configuration: [ Debug, Release ]
    steps:
      - name: Download a build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: Run test
        uses: microsoft/vstest-action@v1.0.0
        with:
          testAssembly: WslTest.dll
          searchFolder: ./WSL2.programs/tests/WslTest/bin/${{ matrix.configuration }}/
          runInParallel: true
      